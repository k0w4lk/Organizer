"use strict";const newTaskText=document.querySelector("#new-task-text"),newTaskAdd=document.querySelector("#new-task-add"),newTaskError=document.querySelector("#new-task-error"),counterTBD=document.querySelector("#counter-TBD"),counterDone=document.querySelector("#counter-done"),massButtonsTBD=document.querySelector("#mass-buttons-TBD"),massButtonsDone=document.querySelector("#mass-buttons-done"),chooseAllTBD=document.querySelector("#choose-all-TBD"),chooseAllDone=document.querySelector("#choose-all-done"),allToDone=document.querySelector("#all-to-done"),allToExecution=document.querySelector("#all-to-execution"),deleteAllTBD=document.querySelector("#delete-all-TBD"),deleteAllDone=document.querySelector("#delete-all-done"),listTBD=document.querySelector("#list-TBD"),listDone=document.querySelector("#list-done");let dataTBD,dataDone;function getTasksData(){dataTBD=JSON.parse(localStorage.getItem("dataTBD"))||[],dataDone=JSON.parse(localStorage.getItem("dataDone"))||[]}function saveTasksData(e){e?localStorage.setItem("dataTBD",JSON.stringify([...dataTBD,{text:e.taskText,id:e.taskID,isChecked:e.isChecked,toEdit:e.toEdit}])):(localStorage.setItem("dataTBD",JSON.stringify([...dataTBD])),localStorage.setItem("dataDone",JSON.stringify([...dataDone])))}function addNewTask(){const e=newTaskText.value;if(newTaskText.focus(),!e)return void(newTaskError.innerText="You have not entered a task name");const t=Math.random().toString(32).slice(3);newTaskText.value="",saveTasksData({taskText:e,taskID:t,isChecked:!1,toEdit:!1}),renderTasks()}function createNewTaskTemplate(e,t){const s=document.createElement("li");s.dataset.id=e.id;const a=document.createElement("input");a.setAttribute("type","checkbox"),a.checked=e.isChecked,a.classList.add("l-main-task__checkbox");const n=document.createElement("span");n.innerText=e.text;const o=document.createElement("button");o.innerText="Edit",o.disabled=!0,s.append(a,n,o),t.append(s)}function renderTasks(){getTasksData(),listTBD.innerHTML="",listDone.innerHTML="",dataTBD.forEach(e=>createNewTaskTemplate(e,listTBD)),dataDone.forEach(e=>createNewTaskTemplate(e,listDone)),updateTasksCounter(counterTBD,listTBD),updateTasksCounter(counterDone,listDone)}function resetCheckboxesStatuses(){chooseAllTBD.checked=!1,chooseAllDone.checked=!1,dataTBD.forEach(e=>{e.isChecked=!1,e.toEdit=!1}),dataDone.forEach(e=>{e.isChecked=!1,e.toEdit=!1}),saveTasksData()}function clearNewTaskErrorText(){newTaskError.innerText=""}function updateTasksCounter(e,t){e.innerText=t.children.length,massButtonsDisplay()}function chooseAllTasks(e,t){t.checked?e.forEach(e=>e.isChecked=!0):e.forEach(e=>e.isChecked=!1),saveTasksData(),renderTasks(),massButtonActivity()}function moveTasksToDone(){dataTBD=dataTBD.filter(e=>!e.isChecked||(dataDone.push(e),!1)),saveTasksData(),resetCheckboxesStatuses(),renderTasks(),massButtonActivity()}function moveTasksToExecution(){dataDone=dataDone.filter(e=>!e.isChecked||(dataTBD.push(e),!1)),saveTasksData(),resetCheckboxesStatuses(),renderTasks()}function chooseTask(e,t){e.target.classList.contains("l-main-task__checkbox")&&(t.forEach(t=>{t.id===e.target.parentNode.dataset.id&&(e.target.checked?(t.isChecked=!0,saveTasksData()):(t.isChecked=!1,saveTasksData()))}),massButtonActivity())}function massButtonActivity(){let e=0,t=0;dataTBD.forEach(t=>{t.isChecked&&e++}),dataDone.forEach(e=>{e.isChecked&&t++}),e?(allToDone.disabled=!1,deleteAllTBD.disabled=!1):(allToDone.disabled=!0,deleteAllTBD.disabled=!0),t?(allToExecution.disabled=!1,deleteAllDone.disabled=!1):(allToExecution.disabled=!0,deleteAllDone.disabled=!0)}function massButtonsDisplay(){"0"===counterTBD.innerText?(massButtonsTBD.classList.add("l-main-tasks__mass-action-buttons_hidden"),massButtonsTBD.classList.remove("l-main-tasks__mass-action-buttons_active")):(massButtonsTBD.classList.add("l-main-tasks__mass-action-buttons_active"),massButtonsTBD.classList.remove("l-main-tasks__mass-action-buttons_hidden")),"0"===counterDone.innerText?(massButtonsDone.classList.add("l-main-tasks__mass-action-buttons_hidden"),massButtonsDone.classList.remove("l-main-tasks__mass-action-buttons_active")):(massButtonsDone.classList.add("l-main-tasks__mass-action-buttons_active"),massButtonsDone.classList.remove("l-main-tasks__mass-action-buttons_hidden"))}function deleteTasksTBD(){dataTBD=dataTBD.filter(e=>!e.isChecked),saveTasksData(),renderTasks(),resetCheckboxesStatuses(),massButtonActivity()}function deleteTasksDone(){dataDone=dataDone.filter(e=>!e.isChecked),saveTasksData(),renderTasks(),resetCheckboxesStatuses(),massButtonActivity()}newTaskAdd.addEventListener("click",()=>addNewTask(newTaskText,listTBD)),newTaskText.addEventListener("blur",clearNewTaskErrorText),newTaskText.addEventListener("input",()=>{30===newTaskText.value.length?newTaskError.innerText="The maximum number of characters is 30":clearNewTaskErrorText()}),chooseAllTBD.addEventListener("change",()=>chooseAllTasks(dataTBD,chooseAllTBD)),chooseAllDone.addEventListener("change",()=>chooseAllTasks(dataDone,chooseAllDone)),allToDone.addEventListener("click",moveTasksToDone),allToExecution.addEventListener("click",moveTasksToExecution),listTBD.addEventListener("change",()=>chooseTask(event,dataTBD)),listDone.addEventListener("change",()=>chooseTask(event,dataDone)),deleteAllTBD.addEventListener("click",deleteTasksTBD),deleteAllDone.addEventListener("click",deleteTasksDone),getTasksData(),resetCheckboxesStatuses(),renderTasks();